import discord
from discord.ext import commands
import aiohttp
import asyncio

# --- ‚öôÔ∏è ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ (‡πÅ‡∏Å‡πâ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ) ---
BOT_TOKEN = "YOUR_BOT_TOKEN"  # << 1. ‡πÉ‡∏™‡πà Token ‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó‡∏Ñ‡∏∏‡∏ì
BASE_API_URL = "https://api.yourdomain.com" # << 2. ‡πÉ‡∏™‡πà URL ‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á API (‡πÄ‡∏ä‡πà‡∏ô https://api.example.com)
STORE_ID = 1  # << 3. ‡πÉ‡∏™‡πà ID ‡∏Ç‡∏≠‡∏á‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏ö‡∏≠‡∏ó‡∏ô‡∏µ‡πâ‡∏î‡∏π‡πÅ‡∏•

# --- üè™ ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡πâ‡∏≤‡∏ô (‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÄ‡∏ï‡∏¥‡∏°‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥) ---
restaurant_data = {
    "name": "‡∏£‡πâ‡∏≤‡∏ô (‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...)",
    "menu": {}  # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏≤‡∏Å List ‡πÄ‡∏õ‡πá‡∏ô Dictionary ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (ID, ‡∏£‡∏≤‡∏Ñ‡∏≤)
}

# --- ü§ñ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Bot ‡πÅ‡∏•‡∏∞ Intents ---
intents = discord.Intents.default()
intents.message_content = True
bot = commands.Bot(command_prefix="!", intents=intents)

# --- üì° ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å API ---
async def fetch_restaurant_data():
    """
    ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡πâ‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏°‡∏ô‡∏π‡∏à‡∏≤‡∏Å API ‡∏ï‡∏≤‡∏° STORE_ID ‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
    """
    global restaurant_data
    
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á URL ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏¢‡∏¥‡∏á API
    api_endpoint = f"{BASE_API_URL}/store?store_id={STORE_ID}"
    print(f"‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å: {api_endpoint}")

    async with aiohttp.ClientSession() as session:
        try:
            async with session.get(api_endpoint) as response:
                if response.status == 200:
                    data = await response.json() # ‡πÅ‡∏õ‡∏•‡∏á .json ‡πÄ‡∏õ‡πá‡∏ô dict
                    
                    # 1. ‡∏î‡∏∂‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏£‡πâ‡∏≤‡∏ô
                    # ‡∏à‡∏≤‡∏Å JSON: { "name": "‡πÇ‡∏Ñ‡πÄ‡∏à", ... } 
                    restaurant_data["name"] = data.get("name", "‡∏£‡πâ‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠")
                    
                    # 2. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏°‡∏ô‡∏π (Dictionary)
                    # ‡∏à‡∏≤‡∏Å JSON: { "products": [ { "name": "...", "product_id": ..., "price": ... }, ... ] } 
                    
                    # ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡πÄ‡∏°‡∏ô‡∏π‡πÄ‡∏Å‡πà‡∏≤‡∏Å‡πà‡∏≠‡∏ô
                    restaurant_data["menu"] = {} 
                    
                    raw_products = data.get("products", [])
                    for item in raw_products:
                        food_name = item.get("name")
                        if food_name:
                            # ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏ä‡∏∑‡πà‡∏≠‡∏û‡∏¥‡∏°‡∏û‡πå‡πÄ‡∏•‡πá‡∏Å‡πÄ‡∏õ‡πá‡∏ô key
                            food_name_lower = food_name.lower()
                            restaurant_data["menu"][food_name_lower] = {
                                "id": item.get("product_id"),
                                "price": item.get("price"),
                                "original_name": food_name # ‡πÄ‡∏Å‡πá‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏£‡∏¥‡∏á‡πÑ‡∏ß‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
                            }
                    
                    print(f"‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡πâ‡∏≤‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {restaurant_data['name']}")
                    print(f"üõí ‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏µ‡πà‡∏û‡∏ö: {len(restaurant_data['menu'])} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
                
                else:
                    print(f"‚ùå Error: ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• API ‡πÑ‡∏î‡πâ (Status: {response.status})")
                    restaurant_data["menu"] = {} # ‡πÄ‡∏ü‡∏•‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏´‡πâ‡πÄ‡∏°‡∏ô‡∏π‡∏ß‡πà‡∏≤‡∏á
        
        except Exception as e:
            print(f"‚ùå Error: ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ API: {e}")
            restaurant_data["menu"] = {}

# --- üöÄ Event ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏ó‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô ---
@bot.event
async def on_ready():
    print(f'Logged in as {bot.user}')
    # ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡πâ‡∏≤‡∏ô‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡∏ó‡∏µ‡πà‡∏ö‡∏≠‡∏ó‡πÄ‡∏£‡∏¥‡πà‡∏°
    await fetch_restaurant_data()

# --- üõí ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á !order ---
@bot.command()
async def order(ctx, *, food_name: str):
    """
    ‡∏£‡∏±‡∏ö‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏≠‡∏≤‡∏´‡∏≤‡∏£ ‡πÇ‡∏î‡∏¢‡∏ï‡πâ‡∏≠‡∏á‡∏û‡∏¥‡∏°‡∏û‡πå !order ‡∏ï‡∏≤‡∏°‡∏î‡πâ‡∏ß‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏≤‡∏´‡∏≤‡∏£
    """
    
    if not restaurant_data["menu"]:
        await ctx.send(f"‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö ‡∏£‡πâ‡∏≤‡∏ô **{restaurant_data['name']}** ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏¥‡∏î‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á (‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏°‡∏ô‡∏π‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à)")
        return

    # ‡πÅ‡∏õ‡∏•‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏°‡∏≤
    requested_food = food_name.lower().strip()

    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏™‡∏±‡πà‡∏á (key ‡∏û‡∏¥‡∏°‡∏û‡πå‡πÄ‡∏•‡πá‡∏Å) ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÄ‡∏°‡∏ô‡∏π (dict) ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if requested_food in restaurant_data["menu"]:
        
        # ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏à‡∏≤‡∏Å dict
        food_details = restaurant_data["menu"][requested_food]
        original_name = food_details["original_name"]
        price = food_details["price"]
        product_id = food_details["id"] # << ‡πÄ‡∏£‡∏≤‡πÑ‡∏î‡πâ ID ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏°‡∏≤‡∏î‡πâ‡∏ß‡∏¢!

        await ctx.send(f"‚úÖ ‡∏£‡∏±‡∏ö‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå **{original_name}** ‡∏£‡∏≤‡∏Ñ‡∏≤ {price} ‡∏ö‡∏≤‡∏ó ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö!")
        
        # --- (‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏™‡∏£‡∏¥‡∏°) ---
        # ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡∏¥‡∏á API POST /orders/add ‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢
        # ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ
        # - ctx.author.id (‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏õ‡πá‡∏ô student_id)
        # - STORE_ID (‡∏à‡∏≤‡∏Å‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô)
        # - product_id (‡∏à‡∏≤‡∏Å food_details)
        # ---------------------

    else:
        # ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠
        await ctx.send(f"‚ùå ‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö **{food_name.strip()}** ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏ô‡πÄ‡∏°‡∏ô‡∏π‡∏Ç‡∏≠‡∏á‡∏£‡πâ‡∏≤‡∏ô **{restaurant_data['name']}** ‡∏Ñ‡∏£‡∏±‡∏ö")

# --- üìã ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á !menu (‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï) ---
@bot.command()
async def menu(ctx):
    """
    ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏ô‡∏π‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡∏î‡∏∂‡∏á‡∏°‡∏≤‡∏à‡∏≤‡∏Å API
    """
    if restaurant_data["menu"]:
        menu_display_list = []
        # ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡∏à‡∏≤‡∏Å .values() ‡∏Ç‡∏≠‡∏á dictionary ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
        for food_details in restaurant_data["menu"].values():
            name = food_details["original_name"]
            price = food_details["price"]
            menu_display_list.append(f"- **{name}** (‡∏£‡∏≤‡∏Ñ‡∏≤ {price} ‡∏ö‡∏≤‡∏ó)")
        
        menu_text = "\n".join(menu_display_list)
        await ctx.send(f"**‡πÄ‡∏°‡∏ô‡∏π‡∏£‡πâ‡∏≤‡∏ô {restaurant_data['name']}**\n{menu_text}")
    else:
        await ctx.send("‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏°‡∏ô‡∏π‡πÉ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ")

# --- üîÅ (‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏™‡∏£‡∏¥‡∏°) ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏°‡∏ô‡∏π‡πÉ‡∏´‡∏°‡πà ---
@bot.command()
@commands.is_owner() # ‡πÉ‡∏´‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ
async def reload(ctx):
    """
    ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÉ‡∏´‡πâ‡∏ö‡∏≠‡∏ó‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• API ‡πÉ‡∏´‡∏°‡πà
    """
    await ctx.send("üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡πâ‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏°‡∏ô‡∏π‡πÉ‡∏´‡∏°‡πà...")
    await fetch_restaurant_data()
    await ctx.send(f"‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡πâ‡∏≤‡∏ô **{restaurant_data['name']}** ‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!")


# --- ‡∏£‡∏±‡∏ô‡∏ö‡∏≠‡∏ó ---
try:
    bot.run(BOT_TOKEN)
except discord.errors.LoginFailure:
    print("‚ùå Error: BOT_TOKEN ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")
except Exception as e:
    print(f"‚ùå Error: ‡πÄ‡∏Å‡∏¥‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ô‡∏ö‡∏≠‡∏ó: {e}")
